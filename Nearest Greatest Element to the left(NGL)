//code
/*
Nearest Greatest Element to the left(NGL)
*/

#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define vi vector<int>
#define vll vector<long long>
#define Fast_IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define all(x) (x).begin(),(x).end() // can be used in sorting
#define PI 3.141592653589793238462
#define nl "\n"

//functions
#define gcd(a, b) __gcd(a, b)
#define lcm(a, b) ((a / gcd(a, b)) * b)
#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define yes puts("YES")
#define no puts("NO")
#define vecInput(arr) for(int i=0; i<(int)arr.size(); ++i) cin >> arr[i]
#define vecInputll(arr) for(ll i=0; i<(ll)arr.size(); ++i) cin >> arr[i]



vector<int> solve(vector<int> arr){ //Nearest Greatest Element to the left
    int n=arr.size();
    vector<int> ans(n);
    stack<int> st;
    for(int i=0;i<=n-1;i++){
        while(!st.empty() and st.top()<=arr[i]){
            st.pop();
        }
        if (st.empty()){
            ans[i]=-1;
        }
        else{
            ans[i]=st.top();
        }
        st.push(arr[i]);
    }
    return ans;
}
int main(){
    Fast_IO;
    vi arr={1,3,2,4};
    vi ans=solve(arr);
    for(int i=0;i<arr.size();i++){
        cout<<ans[i]<<" ";
    }
}
